C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C NAME
C     stdio -- define logical units for standard I/O
C
C REVISION
C     $Id: stdio.fh,v 1.10 2007-08-16 22:28:51 d3p852 Exp $
C
C NOTES
C     Common block must be initialized with stdio_init.fh in the main
C     program. stdio_term.fh should be used to wrap up standard I/O
C     usage.
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
      Integer LUIn, LUOut, LUErr
C
C     This way we do not have to worry about the initialization/termination
C
      Parameter (LuIn = 5, LuOut = 6, LuErr = 0)
C
C     A potentially useful tidbit:  On Cray machines, units
C     100, 101, and 102 are always assigned to stdin, stdout, and stderr.
C     They differ from 5, 6, and 0 in that they cannot be OPENed,
C     and will not exist according to INQUIRE.  Consequently, 100+
C     will _always_ correspond to the unix stdio streams regardless
C     of what the application may do with 5/6/0
C
C     Also note that on Crays, all of these units are _assigned_ but not
C     preconnected.  That means if you try to call something like flush
C     on a unit that you have not written to previously (implicitly
C     opeining it), it causes a fatal error.
